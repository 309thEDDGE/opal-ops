apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: jupyterhub
  name: traefik-account
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: jupyterhub
  name: traefik-role
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  namespace: jupyterhub
  name: traefik-role-binding

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
  - kind: ServiceAccount
    name: traefik-account
    namespace: jupyterhub
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: jupyterhub
  name: traefik-config
data:
  file-from-cfgmap: |
    # TOML equivalent of ../docker-compose/traefik/traefik.yml
    defaultEntryPoints = ["web","websecure"]

    [providers.kubernetesIngress.ingressEndpoint]
    publishedService = "opal-prod/traefik"

    [providers.file]
    filename = "/etc/traefik/traefik_dynamic.yml"

    [entryPoints.web.http.redirections.entryPoint]
    to = ":443"
    scheme = "https"

    [entryPoints.web]
    address = ":8000"

    [entryPoints.websecure.http.tls]

    [entryPoints.websecure]
    address = ":8443"

    [api]
    insecure = true
    dashboard = true

    #[ping]

    [log]
    level = "DEBUG"
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: jupyterhub
  name: traefik-config-dynamic
data:
  file-from-cfgmap: |
    tls:
      certificates:
        - certFile: "/etc/traefik/certs/tls.crt"
          keyFile: "/etc/traefik/certs/tls.key"
      stores:
        default:
          defaultCertificate:
            certFile:  "/etc/traefik/certs/tls.crt"
            keyFile: "/etc/traefik/certs/tls.key"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: jupyterhub
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      imagePullSecrets:
        - name: regcred
      serviceAccountName: traefik-account
      containers:
        - name: traefik
          image: registry1.dso.mil/ironbank/opensource/traefik/traefik:v2.9.1
          ports:
            - name: web
              containerPort: 8000
            - name: dashboard
              containerPort: 8080
            - name: websecure
              containerPort: 8443
          volumeMounts:
            - name: traefik-cfg
              mountPath: /etc/traefik/traefik.toml
              subPath: file-from-cfgmap
            - name: traefik-cfg-dynamic
              mountPath: /etc/traefik/traefik_dynamic.yml
              subPath: file-from-cfgmap
            - name: traefik-certs-files
              mountPath: /etc/traefik/certs
      volumes:
        - name: traefik-certs-files
          secret:
            secretName: tls-certs
        - name: traefik-cfg-dynamic
          configMap:
            name: traefik-config-dynamic
        - name: traefik-cfg
          configMap:
            name: traefik-config
---
apiVersion: v1
kind: Service
metadata:
  namespace: jupyterhub
  name: traefik
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - protocol: TCP
      port: 80
      name: web
      targetPort: web
    - protocol: TCP
      port: 8080
      name: dashboard
      targetPort: dashboard
    - protocol: TCP
      port: 443
      name: websecure
      targetPort: websecure
  #clusterIP: "172.20.30.9"
  #clusterIP: "10.96.30.9"
---
